'''
04_정수형, 실수형, 문자형 리스트를 생성하는 예제
'''
# [1] 정수형
a=[1,2,3,4,5]
print('[1] 정수형 리스트:', a, type(a))

# [2] 실수형
b=[1.0, 2.0, 3.0, 4.0, 5.0]
# b=[1., 2., 3., 4., 5.]
# => 소수자리가 0이라면 0을 생략하고 실수부. 만 적어줘도 알아서 0으로 처리
print('[2] 실수형 리스트: ', b, type(b))

# [3] 문자형
c= ['a', 'b', 'c', 'd', 'e']
print('[3] 문자형 리스트:', c, type(c))

# 리스트 안에 담긴 값(요소)들의 타입은 모두 다르지만, 셋 모두 list

'''
05_서로 다른 데이터 자료형 값을 사용하여 리스트를 생성
'''
# [1] 정수 + 리스트
a = [1, 2, 3, 4, 5, ['a','b','c']]
print('[1] 정수 + 리스트 :', a, type(a))

# [2] 정수 + 실수 + 문자
b = [100, 3.14, 'korea', [1,2,3]]
print('[2] 정수 + 실수 + 문자 : ', b, type(b))

# [3] 정수 + 리스트 + 튜플
c = [1, 2, 3, [4, 5, 6], (7,8,9)]
print('[3] 정수 + 리스트 + 튜플', c, type(c))

# [4] 주요 타입 7개 -> 정수, 실수, 문자, 리스트(list), 튜플(tuple), 집합(set), 딕셔너리(dict)
d = [100, 3.14, 'korea', [1,2,3,3], (1,2,3,3), {1, 2, 3, 3}, {'a':100, 'b':200, 'c':300}]
# 집합(set)은 중복이 불가하기 때문에 print 해보면 {1, 2, 3}으로 출력됨
print('[4] 주요 타입 7개 : ', d, type(d))


'''
06_리스트 생성시 빈 리스트를 생성하는 2가지 방법
'''
# [1] 빈 리스트 생성 첫 번째 방식
a = []
print('[1] 빈 리스트 첫 번째 방식', a, type(a))

# [2] 빈 리스트 생성 두번째 방식
b = list()
print('[2] 빈 리스트 두 번째 방식', b, type(b))

a = [1, 2, 3, 3] # 중복 값이 있는 리스트 a
b = set(a) # 리스트 a를 set에 담아줌 => type이 set이 되면서 중복 값이 사라짐
print('리스트를 집합에', b, type(b))

'''
07_인덱스를 이용하여 리스트 요소에 접근하고 해당 요소 값을 출력

리스트의 각 요소에는 인덱스 번호가 부여되므로 그 인덱스 번호를 이용해서 접근하고 출력 시에도 사용
인덱스 번호는 0부터 부여 => 첫번째 요소의 인덱스는 1이 아닌 0!!!
'''
a = [100, 200, 300, 400, 500]
print('[1] 인덱스를 이용한 a 리스트 요소 출력',a[0])

b = [100, 3.14, 'korea', [1,2,3,3], (1,2,3,3), {1, 2, 3, 3}, {'a':100, 'b':200, 'c':300}]
print(b[1]) # 3.14
print(b[3]) # [1,2,3,3]
print(b[3][1]) # 2
print(b[5]) # {1,2,3} 
# set의 요소에 접근하려면 리스트나 튜플 형태로 변환 후에 접근해야함
print(b[6]) # {'a':100, 'b':200, 'c':300}